# JMH version: 1.26
# VM version: JDK 1.8.0_271, Java HotSpot(TM) 64-Bit Server VM, 25.271-b09
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_271.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63114:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 10 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: utils.matchutilsBenchMark.repalceAll

# Run progress: 0.00% complete, ETA 00:08:00
# Fork: 1 of 2
# Warmup Iteration   1: 62.942 ops/ms
# Warmup Iteration   2: 103.714 ops/ms
# Warmup Iteration   3: 80.535 ops/ms
Iteration   1: 130.848 ops/ms
Iteration   2: 123.485 ops/ms
Iteration   3: 135.006 ops/ms
Iteration   4: 124.052 ops/ms
Iteration   5: 128.252 ops/ms
Iteration   6: 133.385 ops/ms
Iteration   7: 127.540 ops/ms
Iteration   8: 121.624 ops/ms
Iteration   9: 115.159 ops/ms
Iteration  10: 125.496 ops/ms

# Run progress: 16.67% complete, ETA 00:06:47
# Fork: 2 of 2
# Warmup Iteration   1: 130.257 ops/ms
# Warmup Iteration   2: 132.477 ops/ms
# Warmup Iteration   3: 117.605 ops/ms
Iteration   1: 112.108 ops/ms
Iteration   2: 110.971 ops/ms
Iteration   3: 106.880 ops/ms
Iteration   4: 114.841 ops/ms
Iteration   5: 90.501 ops/ms
Iteration   6: 107.444 ops/ms
Iteration   7: 109.870 ops/ms
Iteration   8: 106.378 ops/ms
Iteration   9: 98.255 ops/ms
Iteration  10: 118.565 ops/ms


Result "utils.matchutilsBenchMark.repalceAll":
  117.033 ±(99.9%) 10.331 ops/ms [Average]
  (min, avg, max) = (90.501, 117.033, 135.006), stdev = 11.897
  CI (99.9%): [106.702, 127.364] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_271, Java HotSpot(TM) 64-Bit Server VM, 25.271-b09
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_271.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63114:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 10 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: utils.matchutilsBenchMark.replace

# Run progress: 33.33% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: 72.989 ops/ms
# Warmup Iteration   2: 72.355 ops/ms
# Warmup Iteration   3: 74.150 ops/ms
Iteration   1: 73.179 ops/ms
Iteration   2: 71.732 ops/ms
Iteration   3: 68.973 ops/ms
Iteration   4: 71.531 ops/ms
Iteration   5: 79.810 ops/ms
Iteration   6: 76.572 ops/ms
Iteration   7: 78.633 ops/ms
Iteration   8: 74.746 ops/ms
Iteration   9: 56.374 ops/ms
Iteration  10: 71.899 ops/ms

# Run progress: 50.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: 57.002 ops/ms
# Warmup Iteration   2: 68.121 ops/ms
# Warmup Iteration   3: 72.742 ops/ms
Iteration   1: 72.291 ops/ms
Iteration   2: 72.921 ops/ms
Iteration   3: 68.505 ops/ms
Iteration   4: 76.577 ops/ms
Iteration   5: 79.306 ops/ms
Iteration   6: 78.473 ops/ms
Iteration   7: 72.474 ops/ms
Iteration   8: 70.107 ops/ms
Iteration   9: 73.107 ops/ms
Iteration  10: 75.227 ops/ms


Result "utils.matchutilsBenchMark.replace":
  73.122 ±(99.9%) 4.491 ops/ms [Average]
  (min, avg, max) = (56.374, 73.122, 79.810), stdev = 5.171
  CI (99.9%): [68.631, 77.612] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_271, Java HotSpot(TM) 64-Bit Server VM, 25.271-b09
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_271.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63114:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 10 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: utils.matchutilsBenchMark.stringAdd

# Run progress: 66.67% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: 3587.403 ops/ms
# Warmup Iteration   2: 3860.544 ops/ms
# Warmup Iteration   3: 3824.460 ops/ms
Iteration   1: 3775.348 ops/ms
Iteration   2: 3707.932 ops/ms
Iteration   3: 3758.691 ops/ms
Iteration   4: 3715.579 ops/ms
Iteration   5: 3722.800 ops/ms
Iteration   6: 3827.514 ops/ms
Iteration   7: 3531.524 ops/ms
Iteration   8: 3659.832 ops/ms
Iteration   9: 3799.761 ops/ms
Iteration  10: 3516.087 ops/ms

# Run progress: 83.33% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 3646.639 ops/ms
# Warmup Iteration   2: 3772.366 ops/ms
# Warmup Iteration   3: 3827.742 ops/ms
Iteration   1: 3506.248 ops/ms
Iteration   2: 3678.079 ops/ms
Iteration   3: 3507.929 ops/ms
Iteration   4: 3708.547 ops/ms
Iteration   5: 3610.667 ops/ms
Iteration   6: 3627.151 ops/ms
Iteration   7: 3609.733 ops/ms
Iteration   8: 3721.932 ops/ms
Iteration   9: 3672.138 ops/ms
Iteration  10: 3439.091 ops/ms


Result "utils.matchutilsBenchMark.stringAdd":
  3654.829 ±(99.9%) 94.480 ops/ms [Average]
  (min, avg, max) = (3439.091, 3654.829, 3827.514), stdev = 108.803
  CI (99.9%): [3560.349, 3749.309] (assumes normal distribution)


# Run complete. Total time: 00:08:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        Mode  Cnt     Score    Error   Units
matchutilsBenchMark.repalceAll  thrpt   20   117.033 ± 10.331  ops/ms
matchutilsBenchMark.replace     thrpt   20    73.122 ±  4.491  ops/ms
matchutilsBenchMark.stringAdd   thrpt   20  3654.829 ± 94.480  ops/ms
